security:

  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      id: App\Security\Application\Provider\UserProvider
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      anonymous: lazy
      provider: app_user_provider
      stateless: true
      logout: ~
      guard:
        authenticators:
          - App\Core\Infrastructure\Container\Application\Service\TokenAuthenticator

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    # Company
    - { path: '/api/v1/companies/mother', roles: [ROLE_ADMIN], methods: [GET] }
    - { path: '/api/v1/companies/\d+', roles: [ROLE_ADMIN], methods: [GET, PUT] }
    - { path: '/api/v1/companies', roles: [ROLE_ADMIN], methods: [GET, POST] }
    - { path: '/api/v1/sections/\d+', roles: [ROLE_ADMIN, ROLE_MANAGER], methods: [PUT] }
    - { path: '/api/v1/sections', roles: [ROLE_ADMIN, ROLE_MANAGER], methods: [GET] }

    # Attendance
    - { path: '/api/v1/requests/move/\d+/awaiting-support', roles: [ROLE_USER, ROLE_MANAGER], methods: [POST] }
    - { path: '/api/v1/requests/move/\d+/awaiting-response', roles: [ROLE_USER, ROLE_MANAGER], methods: [POST] }
    - { path: '/api/v1/requests/move/\d+/in-attendance', roles: [ROLE_USER, ROLE_MANAGER], methods: [POST] }
    - { path: '/api/v1/requests/move/\d+/finished', roles: [ROLE_USER, ROLE_MANAGER], methods: [POST] }
    - { path: '/api/v1/requests/move/\d+/canceled', roles: [ROLE_USER, ROLE_MANAGER], methods: [POST] }
    - { path: '/api/v1/requests/move/\d+/approved', roles: [ROLE_USER, ROLE_MANAGER], methods: [POST] }
    - { path: '/api/v1/requests/\d+/approve', roles: [ROLE_USER, ROLE_MANAGER], methods: [POST] }
    - { path: '/api/v1/requests/\d+/disapprove', roles: [ROLE_USER, ROLE_MANAGER], methods: [POST] }
    - { path: '/api/v1/requests/export-requests-to-pdf', roles: [ROLE_MANAGER], methods: [GET] }
    - { path: '/api/v1/requests/\d+/transfer-company', roles: [ROLE_USER, ROLE_MANAGER], methods: [POST] }
    - { path: '/api/v1/requests/\d+', roles: [ROLE_USER, ROLE_MANAGER], methods: [PUT] }
    - { path: '/api/v1/requests', roles: [ROLE_USER, ROLE_MANAGER], methods: [GET, POST] }

    # User
    - { path: '/api/v1/users/manager', roles: [ROLE_MANAGER], methods: [GET] }
    - { path: '/api/v1/users/support', roles: [ROLE_MANAGER], methods: [GET] }
    - { path: '/api/v1/users/reset-password', roles: [ROLE_ADMIN, ROLE_MANAGER, ROLE_USER, ROLE_CLIENT], methods: [POST] }
    - { path: '/api/v1/users/\d+/image', roles: [ROLE_USER, ROLE_MANAGER], methods: [POST] }
    - { path: '/api/v1/users/\d+', roles: [ROLE_USER, ROLE_MANAGER], methods: [GET, PUT] }
    - { path: '/api/v1/users', roles: [ROLE_ADMIN, ROLE_MANAGER], methods: [POST] }
